import speech_recognition as sr
import pyttsx3
import pywhatkit
import datetime
import wikipedia
import pyjokes
import webbrowser
from AppOpener import open as op
from AppOpener import close
import sys

# Initialize the recognizer
r = sr.Recognizer()
engine = pyttsx3.init()
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[1].id)
items = ['ANACONDA NAVIGATOR SAMYAK','ANACONDA POWERSHELL PROMPT SAMYAK','ANACONDA PROMPT SAMYAK','ANDROID STUDIO','APPLICATION VERIFIER HELP','APPLICATION VERIFIER WOW','APPLICATION VERIFIER X','B&O AUDIO CONTROL','BASH SHELL','BITNAMI FOR XAMPP','BOOKING COM APAC BIG SAVINGS ON HOTELS IN DESTINATIONS WORLDWIDE','BROWSE SAMPLES','BUBBLE WITCH SAGA','CALCULATOR','CALENDAR','CAMERA','CANDIGITAL','CANDY CRUSH FRIENDS','CHARACTER MAP','CLIPCHAMP - VIDEO EDITOR','CLOCK','CODEBLOCKS','CODEBLOCKS CBP MAKE','CODEBLOCKS LAUNCHER','CODEBLOCKS SHARE CONFIG','COMMAND PROMPT','COMPILED SAMPLES','COMPONENT SERVICES','COMPUTER MANAGEMENT','CONSOLE','CONTROL PANEL','CORTANA','CREATE PDF FILES','DEBUGGABLE PACKAGE MANAGER','DEFRAGMENT AND OPTIMIZE DRIVES','DEVELOPER COMMAND PROMPT FOR VS','DEVELOPER POWERSHELL FOR VS','DEVELOPER S GUIDE','DISK CLEANUP','DOCUMENTATION','DOCUMENTATION FOR DESKTOP APPS','DOCUMENTATION FOR WINDOWS STORE APPS','DOKUMENTATION','DR FONE','DROPBOX','DROPBOX WEBSITE','EASYBCD','ECLIPSE IDE FOR JAVA DEVELOPERS - -','ELAN TOUCHPAD SETTING','ENERGY STAR','EVENT VIEWER','EXCEL','FACEBOOK','FAMILY','FAQ','FEEDBACK HUB','FILE EXPLORER','FILMS & TV','FIREFOX','FLOW FOR C - EVAL','FREE GAMES','FREQUENTLY ASKED QUESTIONS','GEFORCE EXPERIENCE','GET HELP','GET STARTED','GETTING STARTED','GIT BASH','GIT CMD','GIT FAQS FREQUENTLY ASKED QUESTIONS','GIT GUI','GIT RELEASE NOTES','HIDDEN OBJECT GAMES','HOMEPAGE','HP AUDIO SWITCH','HP COOLSENSE','HP DOCUMENTATION','HP JUMPSTARTS','HP LASERJET GUIDE','HP PC HARDWARE DIAGNOSTICS WINDOWS','HP PRIVACY SETTINGS','HP SMART','HP SUPPORT ASSISTANT','HP SYSTEM EVENT UTILITY','IDLE PYTHON -BIT','INSTAGRAM','INSTALL NOTES','INTELR GRAPHICS COMMAND CENTER','INTELR GRAPHICS CONTROL PANEL','INTELR OPTANET MEMORY AND STORAGE MANAGEMENT','ISCSI INITIATOR','JUPYTER NOTEBOOK SAMYAK','KEIL UVISION','LAUNCH BGIOBJ EXE','LAUNCH CPP EXE','LAUNCH DIMND EXE','LAUNCH DOSBOX EXE','LAUNCH DPMIINST EXE','LAUNCH DPMILOAD EXE','LAUNCH DPMIRES EXE','LAUNCH EX EXE','LAUNCH GREP MSG EXE','LAUNCH HELLO EXE','LAUNCH MAKE EXE','LAUNCH MAKER EXE','LAUNCH NONAME EXE','LAUNCH PRJ MAK EXE','LAUNCH PRJCFG EXE','LAUNCH PRJCNVT EXE','LAUNCH TASM MSG EXE','LAUNCH TC EXE','LAUNCH TCC EXE','LAUNCH TDUMP EXE','LAUNCH TEMC EXE','LAUNCH TLIB EXE','LAUNCH TLINK EXE','LAUNCH TRANCOPY EXE','LAUNCH TRIGRAPH EXE','LAUNCH UNINSTALL EXE','LAUNCH UNZIP EXE','LINKS - ADVANCE CUSTOMIZATION',"LIVE CAPTIONS", "LOCKDOWN BROWSER OEM", "MAGNIFIER", "MAHJONG GAMES", "MAHJONGG CANDY", "MAIL", "MAPS", "MCAFEE PERSONAL SECURITY", "MEDIA PLAYER", "MICROSOFT EDGE", "MICROSOFT OFFICE", "MICROSOFT STORE", "MICROSOFT TEAMS", "MICROSOFT TEAMS WORK OR SCHOOL", "MICROSOFT TO DO", "MINGW INSTALLATION MANAGER", "MIXED REALITY PORTAL", "MSB", "MULTISIM", "MULTISIM HELP", "MULTISIM USER MANUAL", "NARRATOR", "NETFLIX", "NEW GAMES", "NEWS", "NI LICENSE MANAGER", "NI UPDATE SERVICE", "NOTEPAD", "NVIDIA CONTROL PANEL", "OCTAVE C CLASSES HTML", "OCTAVE C CLASSES PDF", "OCTAVE HTML", "OCTAVE PDF", "OCTAVE- CLI", "OCTAVE- GUI", "ODBC DATA SOURCES -BIT", "OFFICE LANGUAGE PREFERENCES", "ON-SCREEN KEYBOARD", "ONEDRIVE", "ONENOTE", "ONENOTE FOR WINDOWS", "ONLINE DOCUMENTATION", "ONLINE MANUAL", "OPEN IN WINDOWS EXPLORER", "PAINT", "PC HEALTH CHECK", "PDF READER FOR WINDOWS", "PERFORMANCE MONITOR", "PHONE LINK", "PHOTOPEA", "PHOTOS", "PICPICK", "POWER AUTOMATE", "POWER BI DESKTOP", "POWERPOINT", "PREDEFINED SHAPES", "PRINT D", "PURCHASE A LICENS", "PURGE OLD DATA-FILE", "PYCHARM COMMUNITY EDITION", "PYTHON -BIT", "PYTHON MODULE DOCS -BIT", "QUICK ASSIST", "RAR OPENER", "README", "README RTF", "RECOVERY DRIVE", "REGISTRY EDITOR", "RELEASE NOTES", "REMOTE DESKTOP CONNECTION", "RESET SPYDER SETTINGS SAMYAK", "RESOURCE MONITOR", "RPG", "RUN", "RUN DEMO", "SAMPLES FOR DESKTOP APPS", "SAMPLES FOR WINDOWS STORE APPS", "SCAN TO", "SERVICES", "SETTINGS", "SHAPE DESIGNER", "SHAREIT", "SHOP FOR HP SUPPLIES", "SIMPLE SOLITAIRE", "SKYPE", "SNIPPING TOOL", "SOLITAIRE & CASUAL GAMES", "SOLITAIRE POKER & MORE", "SOLITAIRE WITH THEMES", "SPYDER SAMYAK", "STEPS RECORDER", "STICKY NOTES", "STRATEGY", "SYSTEM CONFIGURATION", "SYSTEM INFORMATION", "TASK MANAGER", "TASK SCHEDULER", "TERMINAL", "THE MINDFUSION FORUMS", "THEME EDITOR", "TIPS", "TOOLS FOR DESKTOP APPS", "TOOLS FOR WINDOWS STORE APPS", "TURBO C", "ULTIBOARD", "ULTIBOARD HELP", "ULTIBOARD USER MANUAL", "UNINSTALL", "UNINSTALL TURBO C", "UNINSTALL ZOOM", "USER MANUAL", "VIDEO EDITOR", "VIDEOLAN WEBSITE", "VISIT OUR WEB SITE", "VISUAL STUDIO CODE", "VISUAL STUDIO INSTALLER", "VISUSTIN V DEMO", "VLC MEDIA PLAYER",   'VOICE RECORDER',
    'WEATHER',
    'VLC MEDIA PLAYER - RESET PREFERENCES AND CACHE FILES',
    'VLC MEDIA PLAYER SKINNED',
    'VOICE ACCESS',
    'WEB COMPANION',
    'WHATSAPP',
    'WILD - UNLIMITED PLAY GAMES',
    'WILDTANGENT GAMES',
    'WINDOWS APP CERT KIT',
    'WINDOWS DEFENDER FIREWALL WITH ADVANCED SECURITY',
    'WINDOWS FAX AND SCAN',
    'WINDOWS MEDIA PLAYER LEGACY',
    'WINDOWS MEMORY DIAGNOSTIC',
    'WINDOWS POWERSHELL',
    'WINDOWS POWERSHELL ISE',
    'WINDOWS POWERSHELL ISE X',
    'WINDOWS POWERSHELL X',
    'WINDOWS SECURITY',
    'WINDOWS SOFTWARE DEVELOPMENT KIT',
    'WINDOWS SPEECH RECOGNITION',
    'WINDOWS TOOLS',
    'WIRELESS DISPLAY',
    'WORD',
    'WORDPAD',
    'X NATIVE TOOLS COMMAND PROMPT FOR VS',
    'X X CROSS TOOLS COMMAND PROMPT FOR VS',
    'XAMPP CONTROL PANEL',
    'XAMPP HTDOCS FOLDER',
    'XBOX',
    'XBOX CONSOLE COMPANION',
    'XBOX GAME BAR',
    'XPS VIEWER',
    'ZOOM'
]
def talk(text):
    engine.say(text)
    engine.runAndWait()
def process_command(command):
    if 'play' in command:
        song = command.replace('play', '')
        talk('playing ' + song)
        pywhatkit.playonyt(song)
    elif 'time' in command:
        time = datetime.datetime.now().strftime('%I:%M %p')
        talk('Current time is ' + time)
    elif 'search' in command:
        person = command.replace('search', '')
        info = wikipedia.summary(person, 1)
        print(info)
        talk(info)
    elif 'date' in command:
        talk('sorry, I have a headache')
    elif 'are you single' in command:
        talk('I am in a relationship with wifi')
    elif 'joke' in command:
        talk(pyjokes.get_joke())
    elif "open" in command:
        keyword = command[5:].upper()
        if keyword in items:
            talk('opening ' + keyword)
            op(keyword)
        else:
            search_query = f"{keyword} app open"
            webbrowser.open(f"https://www.google.com/search?q={search_query}")
    elif "close" in command:
        keyword = command[6:].upper()
        talk('closing ' + keyword)
        close(keyword)
while True:
    try:
        with sr.Microphone() as source:
            print("Listening...")
            audio = r.listen(source)
        print("Recognizing...")
        command = r.recognize_google(audio)
        print("Command:", command)
        process_command(command)
    except sr.UnknownValueError:
        print("Sorry, I didn't understand that.")
    except sr.RequestError:
        print("Sorry, my speech service is currently unavailable.")
    if "exit" in command:
        sys.exit()
